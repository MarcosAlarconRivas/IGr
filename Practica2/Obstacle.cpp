//Marcos Alarcon Rivas
#pragma hdrstop

#include "Obstacle.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
//---------------------------------------------------------------------------
Obstacle::Obstacle(unsigned int vertices):Polygon(vertices){}
//---------------------------------------------------------------------------
/*bool Obstacle::intersectionVsLine(Vector* P, Vector* v,//Entrada
double& tIn, Vector& normalIn)const; //Salida del algoritmo

   tIn= 0; tOut= 1; //? es un segmento
   i= 0; encontrado= false;
   while(!encontrado && i<N){
        //Calcular el corte de ? contra la arista extendida  ??, ??
        numerador= ???? · ??;
        ;??·? =denominador
        if( paralelismo por fuera o coincidencia ) encontrado= true;
        else if( !paralelismo por dentro ){ //Intersección usual
        tHit= numerador/denominador;
        if( tHit es de entrada ){
          if( tHit>tIn ) {tIn= tHit; normalIn= ??;}
        }//if
        else if( tHit es de salida ) tOut= min(tOut, tHit);
          encontrado= tIn>tOut;
        }//else if //Intersección usual
        i++;
   }//while
}  */
//---------------------------------------------------------------------------

